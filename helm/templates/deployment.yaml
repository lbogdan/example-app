apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscale.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{- if .Values.image.registry -}}{{ .Values.image.registry }}/{{- end -}}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        env:
        - name: CONFIG_FILE
          value: /config/config.json
        {{- if eq .Values.config.dbType "postgresql" }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "helm.fullname" . }}-postgresql
              key: password
          value: null
        {{- end}}
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          {{- toYaml (omit .Values.probes.readiness "enabled") | nindent 10 }}
        {{- end }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          {{- toYaml (omit .Values.probes.liveness "enabled") | nindent 10 }}
        {{- end }}
        {{- if .Values.resources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.security.enabled }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /config
        {{- if eq .Values.config.dbType "sqlite" }}
        - name: data
          mountPath: /data
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: example-app
      {{- if eq .Values.config.dbType "sqlite" }}
      - name: data
        emptyDir: {}
      {{- end }}
